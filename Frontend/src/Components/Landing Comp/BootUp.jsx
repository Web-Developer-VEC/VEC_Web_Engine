import { useState, useRef, useEffect } from 'react'
 // import { componentWillUnmount }

const Boot = (props) => {
    const isAuth = props.isAuth
    const isLoaded = props.isLoaded
    const theme = props.theme

    const delay = (isAuth) ? 3 : 0

    const canRf = useRef(null)
    let ani
    
    const [forceHide, setForceHide] = useState(false);

    useEffect(() => {
        const timeout = setTimeout(() => {
            setForceHide(true);
        }, 4000); // 4s max boot screen

        return () => clearTimeout(timeout);
    }, []); 


    useEffect(() => {
        const canva = canRf.current
        const cntx = canva.getContext('2d')
        let wdt = (canva.width = window.innerWidth)
        canva.height = window.innerHeight
        let col = Math.floor(wdt / 20)
        let rain = [], prtl = []
        let ani, crt, trn

        for (let i = 0; i < col; i++) {
            if (i > col * 0.25 && i < col * 0.75)
                rain[i] = 0
            else
                rain[i] = 1
        }

        let frm = 15
        let lstFrm = Date.now()

        function Clear() {
            cntx.fillStyle = (theme === "light") ? "rgba(255, 255, 255, 0.07)": "rgba(34, 40, 49, 0.2)"
            cntx.fillRect(0, 0, canva.width, canva.height);
        }

        function particle(x, y, speed, c) {
            this.x = x
            this.y = y
            this.speed = speed
            this.upd = function () {
                cntx.strokeStyle = c;
                cntx.lineWidth = 1
                cntx.lineCap = "round"
                cntx.beginPath()
                cntx.moveTo(this.x, this.y)
                this.x += this.speed.x
                this.y += this.speed.y
                cntx.lineTo(this.x, this.y)
                cntx.stroke()
                this.ang = Math.atan2(this.speed.y, this.speed.x)
                this.mag = Math.sqrt(this.speed.x ** 2 + this.speed.y ** 2)
                var op = [this.ang + Math.PI / 4, this.ang - Math.PI / 4]
                var ch = Math.floor(Math.random() * op.length)
                if (Math.random() < 0.05) {
                    this.speed.x = Math.cos(op[ch]) * this.mag
                    this.speed.y = Math.sin(op[ch]) * this.mag
                }
            }
        }

        var speed = 7
        var period = 500

        function pulse() {
            // setTimeout(pulse, period)
            var h = Math.random() * (210 - 150) + 150
            for (var i = 0; i < 40; i++) {
                prtl.push(new particle(canva.width / 2, canva.height / 2,
                    {
                        x: Math.cos(i / 8 * 2 * Math.PI) * speed,
                        y: Math.sin(i / 8 * 2 * Math.PI) * speed
                    }, "hsl(27, 87%, 57%)"))
            }
        }

        function gameMove() {
            crt = requestAnimationFrame(gameMove)
            Clear()
            for (var i = 0; i < prtl.length; i++) {
                prtl[i].upd();
                if (prtl[i].x < 0 || prtl[i].x > canva.width || prtl[i].y < 0 || prtl[i].y > canva.height) {
                    prtl.splice(i, 1)
                }
            }
        }

        const srtdl = setTimeout(() => {
            if(isAuth) {
                pulse()
                gameMove()
            }
        }, 0);

        const fnldl = setTimeout(() => {
            cancelAnimationFrame(trn)
        }, (!isAuth) ? 3500: 2500);

        return () => clearTimeout(srtdl, fnldl);
    }, [isAuth]);


    return (
        <>
            <canvas
                className={`fixed bg-prim dark:bg-drkts z-[1000] size-full top-0
                    ${(isLoaded || forceHide) ? (!isAuth) ? 'animate-[fadOut_0.5s_ease_forwards] [animation-delay:2.5s]' : 
                    'animate-[fadOut_0.5s_ease_forwards] [animation-delay:2s]' : ''}`}
                ref={canRf}></canvas>
            <div className={`flex flex-col justify-center items-center fixed w-full h-full z-[1000] top-0 ` +
                `${(isLoaded) ? (!isAuth) ? 'bg-prim dark:bg-drkts text-text dark:text-drkt animate-[LslideUp_1s_ease_forwards] [animation-delay:2.5s]': 
                    'animate-[fadOut_0.5s_ease-in_forwards] [animation-delay:2s]': `${isAuth}`} ${isAuth}`}>
                <div className='relative w-[20vmax] h-[20vmax] group/ttl'>
                    <div className='w-full h-full [clip-path:polygon(0_0,100%_0,100%_50%,65%_65%,53%_80%,60%_70%,50%_40%,40%_70%,42%_70%,0_45%)] absolute'>
                        <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox='0 0 500 500'
                             className={`${(!isAuth) ? '[animation-delay:0.5s,1.5s] scale-0 animate-[sizeUp_1s_ease_forwards,twirl_1.5s_ease_infinite]' : 
                                 '[animation-delay:0s] animate-[twirl_1.5s_ease_infinite]'}  
                             origin-center duration-300 transition-all absolute w-full h-full p-[15%] mt-2`}>
                            <path
                                d="M0 0 C0.77279297 -0.01224609 1.54558594 -0.02449219 2.34179688 -0.03710938 C7.28985781 -0.04965729 11.42308986 0.40402305 16.0625 2.1875 C18.27966937 5.51325406 18.22296357 6.40541927 18.25 10.25 C18.64678481 16.15127227 20.20937216 21.15086979 22.3125 26.625 C22.60020264 27.39400635 22.88790527 28.1630127 23.18432617 28.95532227 C25.5697809 34.90234366 28.50920348 38.67636532 34.125 42 C39.29451427 43.93010249 44.66231076 44.16935259 50.0625 43.1875 C53.36409099 41.38663219 55.59125315 38.99256447 58.0625 36.1875 C58.825625 35.36894531 59.58875 34.55039063 60.375 33.70703125 C63.64647689 30.15037628 66.8088584 26.53515337 69.8125 22.75 C73.25986359 18.82383592 75.45893469 17.32098783 80.72265625 16.8828125 C85.53443271 16.95622455 89.02149505 18.67389037 93.1875 20.9375 C93.86425781 21.28554688 94.54101562 21.63359375 95.23828125 21.9921875 C106.01910237 27.62240356 106.01910237 27.62240356 109.0625 32.1875 C109.109375 34.39453125 109.109375 34.39453125 108.8125 37 C108.70550781 37.97839844 108.59851563 38.95679688 108.48828125 39.96484375 C108.04238781 43.33972527 107.52242616 46.69867689 107 50.0625 C106.67471455 52.43578267 106.36218732 54.81084926 106.0625 57.1875 C105.90394531 58.3425 105.74539063 59.4975 105.58203125 60.6875 C105.30704548 64.13080009 105.23529496 66.82922738 106.0625 70.1875 C108.97470937 73.59413297 112.33785361 75.75519304 116.0625 78.1875 C116.64515625 78.91839844 117.2278125 79.64929688 117.828125 80.40234375 C120.82103616 82.79353326 122.87490531 82.73930418 126.62792969 82.56494141 C130.8246375 81.91430861 134.39778079 80.23085735 138.1875 78.375 C139.71081507 77.65989539 141.23425091 76.94504798 142.7578125 76.23046875 C143.48331299 75.88483887 144.20881348 75.53920898 144.95629883 75.18310547 C155.20989214 70.33621158 155.20989214 70.33621158 161.0625 71.1875 C166.41560174 74.49047767 169.5624445 79.36412747 173.1328125 84.46875 C174.44777641 86.3214117 175.82108618 88.13369351 177.2421875 89.90625 C179.21071101 92.37324084 179.97099974 93.65156988 180.5 96.75 C179.84276555 101.91398496 177.07549958 105.03104707 174.0625 109.1875 C172.63477725 111.23091837 171.21778786 113.28142061 169.80395508 115.33447266 C168.82210294 116.76007889 167.83635747 118.18301278 166.84643555 119.60302734 C166.38664307 120.26641113 165.92685059 120.92979492 165.453125 121.61328125 C165.04094727 122.20536377 164.62876953 122.79744629 164.20410156 123.4074707 C161.650423 127.36751954 161.650423 127.36751954 161.1953125 131.953125 C162.27013381 135.961918 163.9502718 139.31205501 165.9375 142.9375 C166.46537109 143.94490234 166.46537109 143.94490234 167.00390625 144.97265625 C168.76941997 148.24771702 169.91709014 150.09056009 173.0625 152.1875 C180.10124972 153.65999274 187.61253355 153.48354176 194.77734375 153.70507812 C199.78864567 153.90907121 204.39381243 154.19079197 209.0625 156.1875 C212.6321494 160.29138265 214.10035197 164.72002039 215.3125 169.9375 C215.4779834 170.64124756 215.6434668 171.34499512 215.81396484 172.07006836 C218.72473125 185.11466951 218.72473125 185.11466951 216.11743164 189.93457031 C211.43527971 195.71068297 205.53281483 198.32201276 198.875 201.375 C196.71048921 202.37999704 194.55011591 203.39396642 192.39453125 204.41796875 C191.44296143 204.85520264 190.4913916 205.29243652 189.51098633 205.74291992 C186.84322448 207.31687015 185.57245704 208.49397131 184.0625 211.1875 C183.45617531 214.66644821 183.5986846 218.16123683 183.625 221.6875 C183.60501953 222.63753906 183.58503906 223.58757812 183.56445312 224.56640625 C183.51329525 229.88325577 183.51329525 229.88325577 185.64453125 234.60546875 C188.72591833 236.62156207 191.89748378 238.35788076 195.1875 240 C214.74196448 250.0838105 214.74196448 250.0838105 216.6796875 256.10546875 C217.31292559 261.6798828 216.85020385 266.86605435 215.875 272.375 C215.7620459 273.03975342 215.6490918 273.70450684 215.53271484 274.3894043 C214.52572503 279.48958605 212.85941966 285.23207338 208.39575195 288.3527832 C205.16015741 289.51031148 201.99210293 289.57666343 198.59375 289.6796875 C197.12106885 289.74553926 195.64841319 289.81196297 194.17578125 289.87890625 C191.86524171 289.97380604 189.55481467 290.06276055 187.24365234 290.14111328 C185.00513962 290.22066885 182.76864405 290.32367294 180.53125 290.4296875 C179.49828796 290.45492996 179.49828796 290.45492996 178.44445801 290.48068237 C175.10979077 290.65210456 173.3285845 290.9755455 170.6862793 293.08032227 C168.91491923 295.37901551 167.62655518 297.63239406 166.375 300.25 C165.95863281 301.10722656 165.54226563 301.96445312 165.11328125 302.84765625 C162.96077516 307.6407832 161.78354306 312.01962168 163.0625 317.1875 C165.28607502 320.61478196 167.77681806 323.68758845 170.375 326.83203125 C175.13530129 332.62564156 180.21748685 339.56957839 181.0625 347.1875 C178.318694 355.05307719 168.69294005 368.37227998 161.0625 372.1875 C153.16985778 371.94010677 147.01500023 369.33512997 139.875 366.125 C137.78181111 365.18658565 135.68425927 364.2578299 133.58203125 363.33984375 C132.66526611 362.92726318 131.74850098 362.51468262 130.80395508 362.08959961 C127.69234303 361.06569663 125.31931295 360.90541604 122.0625 361.1875 C118.89994281 362.94110062 118.89994281 362.94110062 115.9375 365.375 C114.92429687 366.15230469 113.91109375 366.92960937 112.8671875 367.73046875 C107.47080207 372.33868049 107.47080207 372.33868049 105.71875 378.98828125 C105.93950175 383.19537601 106.71539059 387.2563617 107.5625 391.375 C111.00374684 409.73639451 111.00374684 409.73639451 107.375 416.1875 C103.17436388 418.72373313 98.83756759 420.34028032 94.22265625 421.984375 C91.61178296 422.97837867 89.46671156 424.01220116 87.125 425.5 C83.64744707 427.41620264 81.96349408 427.85149899 78.0625 427.1875 C68.91783817 422.51356173 62.21694419 413.38429179 56.0078125 405.47265625 C54.08913922 403.00736637 54.08913922 403.00736637 51.0625 401.1875 C44.24363543 400.79932934 37.85236892 403.05869437 31.53125 405.34765625 C29.0625 406.1875 29.0625 406.1875 27.0625 406.1875 C26.90394531 406.83332031 26.74539063 407.47914063 26.58203125 408.14453125 C25.75247943 411.49482064 24.9109768 414.8419639 24.0625 418.1875 C23.86430664 418.96915527 23.66611328 419.75081055 23.46191406 420.55615234 C22.81339479 423.10136838 22.15752586 425.64459707 21.5 428.1875 C21.29028564 429.0122583 21.08057129 429.8370166 20.86450195 430.68676758 C20.55838989 431.86275513 20.55838989 431.86275513 20.24609375 433.0625 C19.97623657 434.11050781 19.97623657 434.11050781 19.70092773 435.1796875 C18.4364041 439.15652969 17.73121169 440.81108415 13.98828125 442.91796875 C9.74988957 444.53462966 5.74101649 444.60471899 1.25 444.5 C0.45827393 444.4887207 -0.33345215 444.47744141 -1.14916992 444.46582031 C-16.64395432 444.10374069 -16.64395432 444.10374069 -22.9375 438.1875 C-24.13183594 435.2265625 -24.13183594 435.2265625 -24.921875 431.8125 C-25.21707031 430.58015625 -25.51226562 429.3478125 -25.81640625 428.078125 C-26.10386719 426.79421875 -26.39132813 425.5103125 -26.6875 424.1875 C-26.99042969 422.90359375 -27.29335937 421.6196875 -27.60546875 420.296875 C-28.16580575 417.91606536 -28.7183931 415.5334091 -29.26074219 413.1484375 C-29.79295463 410.81991205 -30.34628807 408.50155146 -30.9375 406.1875 C-31.65035156 405.99414062 -32.36320313 405.80078125 -33.09765625 405.6015625 C-34.53431641 405.21097656 -34.53431641 405.21097656 -36 404.8125 C-37.00546875 404.54050781 -38.0109375 404.26851563 -39.046875 403.98828125 C-41.29288137 403.36607678 -43.52484359 402.6930815 -45.75 402 C-50.3081092 400.82333313 -50.3081092 400.82333313 -54.9375 401.1875 C-61.00777409 405.08797399 -65.31893777 410.94796509 -69.7578125 416.5234375 C-76.78365385 425.11057692 -76.78365385 425.11057692 -80.9375 427.1875 C-86.19014119 427.56268866 -89.60539312 426.8070635 -94.3125 424.5 C-95.43140625 423.95214844 -96.5503125 423.40429688 -97.703125 422.83984375 C-98.77046875 422.29457031 -99.8378125 421.74929688 -100.9375 421.1875 C-102.29101562 420.50880859 -102.29101562 420.50880859 -103.671875 419.81640625 C-110.81386253 416.07036377 -110.81386253 416.07036377 -112.9375 412.1875 C-114.58386098 405.56989066 -113.55014868 399.70916113 -112 393.1875 C-109.00301334 382.2408516 -109.00301334 382.2408516 -111.44140625 371.734375 C-112.46041016 370.84492187 -112.46041016 370.84492187 -113.5 369.9375 C-114.22960937 369.29167969 -114.95921875 368.64585937 -115.7109375 367.98046875 C-116.44570312 367.38878906 -117.18046875 366.79710937 -117.9375 366.1875 C-118.56914062 365.66800781 -119.20078125 365.14851563 -119.8515625 364.61328125 C-123.16728096 362.06441398 -125.76387238 360.44944316 -129.9375 360.1875 C-132.76275161 360.96720716 -135.38761806 362.12429054 -138.0625 363.3125 C-138.81587646 363.6329126 -139.56925293 363.9533252 -140.34545898 364.28344727 C-144.62335542 366.11617805 -148.81515659 368.08833708 -153 370.125 C-157.69705792 372.26714308 -160.80189731 373.05794113 -165.9375 372.1875 C-174.10289004 366.96165037 -180.65295613 356.75658773 -184.9375 348.1875 C-185.69483623 342.36978076 -183.52053306 339.10110357 -180.4375 334.4375 C-179.76388428 333.38187866 -179.76388428 333.38187866 -179.07666016 332.30493164 C-176.39652531 328.17388605 -173.5213034 324.36860396 -170.3125 320.625 C-168.01745402 317.81321952 -167.00115116 316.44700087 -166.125 312.875 C-167.95919976 304.55055496 -170.25519351 296.8044018 -176.9375 291.1875 C-180.05352642 290.35913669 -180.05352642 290.35913669 -183.453125 290.33203125 C-184.70480469 290.26693359 -185.95648438 290.20183594 -187.24609375 290.13476562 C-188.54675781 290.09029297 -189.84742188 290.04582031 -191.1875 290 C-208.19212857 289.25807288 -208.19212857 289.25807288 -214.9375 287.1875 C-216.80829137 284.38131295 -217.34165392 283.03012626 -217.97265625 279.84375 C-218.14216797 279.00972656 -218.31167969 278.17570312 -218.48632812 277.31640625 C-218.65583984 276.44886719 -218.82535156 275.58132813 -219 274.6875 C-219.34355456 272.96845004 -219.6885473 271.24968671 -220.03515625 269.53125 C-220.18476807 268.77005859 -220.33437988 268.00886719 -220.48852539 267.22460938 C-220.94099562 265.00263162 -220.94099562 265.00263162 -221.9375 262.1875 C-222.42875276 257.84810062 -222.39273834 255.85124446 -219.890625 252.203125 C-216.86596055 248.77427972 -213.43212114 247.09770642 -209.3125 245.25 C-207.88850159 244.57346185 -206.46662981 243.89243012 -205.046875 243.20703125 C-204.35142578 242.8713916 -203.65597656 242.53575195 -202.93945312 242.18994141 C-193.71961184 237.92470311 -193.71961184 237.92470311 -187.9375 230.1875 C-186.81761188 222.85403908 -185.75744936 215.03683985 -188.9375 208.1875 C-195.57010871 202.58485711 -203.79506868 199.29477316 -211.6484375 195.80078125 C-212.545625 195.38957031 -213.4428125 194.97835937 -214.3671875 194.5546875 C-215.57737549 194.01497314 -215.57737549 194.01497314 -216.81201172 193.46435547 C-219.28005836 191.98171316 -220.48171025 190.66458401 -221.9375 188.1875 C-223.29064146 181.38279236 -221.00552234 174.32416656 -219.1875 167.8125 C-218.80851562 166.33716797 -218.80851562 166.33716797 -218.421875 164.83203125 C-218.1640625 163.88972656 -217.90625 162.94742188 -217.640625 161.9765625 C-217.29499512 160.70353271 -217.29499512 160.70353271 -216.94238281 159.40478516 C-215.65639098 156.56722981 -214.71293247 155.62478263 -211.9375 154.1875 C-209.3114003 153.88654116 -206.91075166 153.74652362 -204.28515625 153.74609375 C-203.1794352 153.72628197 -203.1794352 153.72628197 -202.05137634 153.70606995 C-199.70087912 153.66526459 -197.35077059 153.64353654 -195 153.625 C-192.65292007 153.60115099 -190.30620293 153.57291902 -187.95933533 153.53321838 C-186.50142535 153.50901984 -185.04332442 153.49403266 -183.58522034 153.48960876 C-179.61272837 153.42897765 -176.46241228 153.07337408 -172.9375 151.1875 C-168.56284296 145.78123058 -163.60902876 138.57782301 -163.453125 131.40625 C-164.56316579 126.32154704 -167.92641385 122.32056799 -170.9375 118.1875 C-182.38234149 102.2806734 -182.38234149 102.2806734 -182.37109375 96.296875 C-180.52010531 87.29206639 -174.42109215 79.40399002 -167.0625 74.125 C-159.15481643 71.75269493 -152.25278227 75.03656546 -145.25 78.625 C-135.11242414 84.15527209 -135.11242414 84.15527209 -123.9375 85.1875 C-121.94752854 83.57400963 -120.5773588 82.12279029 -118.9375 80.1875 C-118.18597656 79.37796875 -117.43445313 78.5684375 -116.66015625 77.734375 C-110.84027598 71.44559442 -108.65746414 68.14674192 -108.703125 59.5625 C-109.02269687 54.96066501 -109.8850933 50.52479789 -110.87011719 46.02270508 C-112.06883459 40.36438877 -112.96850507 34.99969672 -110.93359375 29.44921875 C-108.09815411 26.23646033 -104.85394824 24.76998697 -101 23 C-100.28392578 22.65775391 -99.56785156 22.31550781 -98.83007812 21.96289062 C-97.45871783 21.30834887 -96.0840921 20.66059093 -94.70581055 20.02075195 C-93.33481115 19.37471841 -91.98622383 18.68101849 -90.6484375 17.96875 C-87.70581453 16.62508654 -85.10788309 16.90939622 -81.9375 17.1875 C-77.82785339 19.19666057 -75.51348037 21.64658751 -72.75 25.25 C-63.84224467 37.33545585 -63.84224467 37.33545585 -50.984375 43.55859375 C-42.24960522 43.74260394 -42.24960522 43.74260394 -34.65332031 39.89916992 C-28.6728101 33.93312594 -27.24163812 23.54656856 -25.2265625 15.65234375 C-23.69295501 9.95490947 -22.20926889 5.36867926 -17.0625 1.9375 C-11.51626079 -0.01999619 -5.80704999 0.00481913 0 0 Z "
                                className='fill-amber-400' transform="translate(251.9375,28.8125)"/>
                        </svg>
                    </div>
                    <div className='origin-center w-full h-full'>
                        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg"
                             className='relative w-full h-full group duration-300 transition-all'>
                            <path
                                d="M 46.5 85 C 35 70, 40 62.5, 50 45 C 60 62.5, 65 70, 53.5 85 C 60 70, 55 60, 50 54 C 45 60, 40 70, 46.5 85"
                                className='fill-orange-600 stroke-orange stroke-1 stroke-prim dark:stroke-drkts absolute origin-bottom translate-y-[-5%]'/>
                            <path
                                d="M 46.5 85 C 35 70, 40 62.5, 50 45 C 60 62.5, 65 70, 53.5 85 C 60 70, 55 60, 50 54 C 45 60, 40 70, 46.5 85"
                                className={`fill-orange-600 stroke-orange stroke-1 absolute origin-bottom translate-y-[-5%] 
                                ${(!isAuth) ? 'animate-[lowPetR_1s_ease_forwards]': 'animate-[lowPetR_0s_ease_forwards]'}
                                [clip-path:polygon(0_0,100%_0,100%_100%,50%_100%,45%_70%,0_50%)] duration-300 transition-all`}/>
                            <path
                                d="M 46.5 85 C 35 70, 40 62.5, 50 45 C 60 62.5, 65 70, 53.5 85 C 60 70, 55 60, 50 54 C 45 60, 40 70, 46.5 85"
                                className={`fill-orange-600 stroke-orange stroke-1 absolute
                                    origin-bottom translate-y-[-5%] ${(!isAuth) ? 'animate-[lowPetL_1s_ease_forwards]': 'animate-[lowPetL_0s_ease_forwards]'}
                                    [clip-path:polygon(0_0,100%_0,100%_50%,50%_50%,50%_100%,0_100%)] duration-300 transition-all`}/>
                            <path
                                d="M 46.5 85 C 35 70, 40 62.5, 50 45 C 60 62.5, 65 70, 53.5 85 C 60 70, 55 60, 50 54 C 45 60, 40 70, 46.5 85"
                                className={`fill-orange-600 stroke-orange stroke-1 stroke-prim dark:stroke-drkts absolute
                                    origin-bottom translate-y-[-5%] ${(!isAuth) ? 'animate-[midPetR_1s_ease_forwards]': 'animate-[midPetR_0s_ease_forwards]'}
                                    duration-300 transition-all`}/>
                            <path
                                d="M 46.5 85 C 35 70, 40 62.5, 50 45 C 60 62.5, 65 70, 53.5 85 C 60 70, 55 60, 50 54 C 45 60, 40 70, 46.5 85"
                                className={`fill-orange-600 stroke-orange stroke-1 stroke-prim dark:stroke-drkts absolute 
                                    origin-bottom translate-y-[-5%] ${(!isAuth) ? 'animate-[midPetL_1s_ease_forwards]': 'animate-[midPetL_0s_ease_forwards]'}
                                    duration-300 transition-all`}/>
                        </svg>
                    </div>
                </div>
                <div className='xl:top-[63%] md:top-[62%] top-[60%]  w-fit h-auto'>
                    <div
                        className='font-rome text-center text-accn dark:text-drks p-0 -mb-[0.75vmax] text-[0]
                        overflow-hidden'>
                        {"VELAMMAL".split("").map((ltr, i) => (
                            <span className={`animate-[bam_0.4s_ease_forwards]`}
                                  style={{animationDelay: `${(i + delay) * 0.15}s`}}>{ltr}</span>
                        ))}
                    </div>
                    <div className='font-rome text-center text-[0] text-text dark:text-drkt p-0 -mb-[0.75vmax] overflow-hidden'>
                        {"ENGINEERING COLLEGE".split("").map((ltr, i) => (
                            <span className={`animate-[bom_0.4s_ease_forwards]`}
                                  style={{animationDelay: `${(i + delay * 4) * 0.05}s`}}>{ltr}</span>
                        ))}
                    </div>
                    <div className='font-rome text-center text-[0] text-accn dark:text-drks p-0 mt-4 -mb-[0.75vmax] overflow-hidden'>
                        {"Wheel of Knowledge rolls on".split("").map((ltr, i) => (
                            <span className={`animate-[bem_0.4s_ease_forwards]`}
                                  style={{animationDelay: `${(i + delay * 2) * 0.04}s`}}>{ltr}</span>
                        ))}
                    </div>
                    {/* <div className='block font-rome tex t-black text-[1.5vmax] opacity-0 animate-[fadIn_1s_ease_forwards]'>ENGINEERING COLLEGE</div> */}
                </div>
            </div>
        </>
    )
}


export default Boot;